import e from"is-retry-allowed";function t(t){return!t.response&&(!!t.code&&(!["ERR_CANCELED","ECONNABORTED"].includes(t.code)&&e(t)))}var r=["get","head","options"],n=r.concat(["put","delete"]);function o(e){return"ECONNABORTED"!==e.code&&(!e.response||e.response.status>=500&&e.response.status<=599)}function s(e){return!!e.config?.method&&(o(e)&&-1!==r.indexOf(e.config.method))}function i(e){return!!e.config?.method&&(o(e)&&-1!==n.indexOf(e.config.method))}function u(e){return t(e)||i(e)}function c(e=0,t=void 0,r=100){const n=2**e*r;return n+.2*n*Math.random()}var a={retries:3,retryCondition:u,retryDelay:function(){return 0},shouldResetTimeout:!1,onRetry:()=>{}};function f(e,t){const r=function(e,t){return{...a,...t,...e.retry}}(e,t||{});return r.retryCount=r.retryCount||0,r.lastRequestTime=r.lastRequestTime||Date.now(),e.retry=r,r}var d=(e,t)=>({requestInterceptorId:e.interceptors.request.use((e=>(f(e,t),e))),responseInterceptorId:e.interceptors.response.use(null,(async r=>{const{config:n}=r;if(!n)return Promise.reject(r);const o=f(n,t);if(await async function(e,t){const{retries:r,retryCondition:n}=e,o=(e.retryCount||0)<r&&n(t);if("object"==typeof o)try{return!1!==await o}catch(e){return!1}return o}(o,r)){o.retryCount+=1;const{retryDelay:t,shouldResetTimeout:s,onRetry:i}=o,u=t(o.retryCount,r);if(!s&&n.timeout&&o.lastRequestTime){const e=Date.now()-o.lastRequestTime,t=n.timeout-e-u;if(t<=0)return Promise.reject(r);n.timeout=t}return n.transformRequest=[e=>e],await i(o.retryCount,r,n),new Promise((t=>{setTimeout((()=>t(e(n))),u)}))}return Promise.reject(r)}))});d.isNetworkError=t,d.isSafeRequestError=s,d.isIdempotentRequestError=i,d.isNetworkOrIdempotentRequestError=u,d.exponentialDelay=c,d.isRetryableError=o;var m=d;export{a as DEFAULT_OPTIONS,m as default,c as exponentialDelay,i as isIdempotentRequestError,t as isNetworkError,u as isNetworkOrIdempotentRequestError,o as isRetryableError,s as isSafeRequestError};